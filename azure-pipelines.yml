# azure-pipelines.yml

trigger:
- master

jobs:

  - job: doxygen_build
    displayName: script reference build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          sudo apt-get install doxygen doxygen-gui graphviz
          doxygen
    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: project artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/html'
        ArtifactName: 'ScriptReference'
        publishLocation: 'Container'
    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: project artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'project'
        publishLocation: 'Container'

  - job: linux_build
    displayName: linux build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CMake@1
      displayName: 'cmake version'
      inputs:
        cmakeArgs: >
            --version
    
    - task: CMake@1
      displayName: 'cmake configure'
      inputs:
        cmakeArgs: >
            -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)
            $(Build.SourcesDirectory)
    - task: CMake@1
      displayName: 'cmake install'
      inputs:
        cmakeArgs: >
             --build ./
             --target install
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: download'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'download'
        publishLocation: 'Container'
        
    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: project artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'project'
        publishLocation: 'Container'


  - job: macos_build
    displayName: macos build
    pool:
      vmImage: 'macos-latest'
    steps:
    - task: CMake@1
      displayName: 'cmake version'
      inputs:
        cmakeArgs: >
            --version
    
    - task: CMake@1
      displayName: 'cmake configure'
      inputs:
        cmakeArgs: >
            -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)
            $(Build.SourcesDirectory)
    - task: CMake@1
      displayName: 'cmake install'
      inputs:
        cmakeArgs: >
             --build ./
             --target install
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: download'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'download'
        publishLocation: 'Container'
        
    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: project artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'project'
        publishLocation: 'Container'


  - job: windows_build
    displayName: windows build
    pool:
      vmImage : windows-latest
    steps:
    - task: CMake@1
      displayName: 'cmake version'
      inputs:
        cmakeArgs: >
            --version
    
    - task: CMake@1
      displayName: 'cmake configure'
      inputs:
        cmakeArgs: >
            -DCMAKE_USE_RELATIVE_PATHS=ON
            -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory)
            $(Build.SourcesDirectory)
            
    - task: CMake@1
      displayName: 'cmake install'
      inputs:
        cmakeArgs: >
             --build ./
             --target install

    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: binary artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'download'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      displayName: 'postprocess: project artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'project'
        publishLocation: 'Container'
        
  - job: ios_build
    displayName: ios build
    pool:
      vmImage: 'macos-latest'
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo feature supported ios
  
  - job: android_build
    displayName: android build
    pool:
      vmImage: 'macos-latest'
    steps:
    - task: CmdLine@2
      inputs:
        script: |
          echo feature supported android
